@mixin map-styles($styles) {
  @each $style, $value in $styles {
    #{$style}: #{$value};
  }
}

@mixin pseudo($loc: before) {
  @if $loc == before {
    &::before {
      content: "";
      display: block;
      @content;
    }
  }

  @if $loc == after {
    &::after {
      content: "";
      display: block;
      @content;
    }
  }
}

@mixin clickable-block($pos: after) {
  position: relative;

  a {
    @include pseudo($pos) {
      position: absolute;
      top: 0;
      left: 0;
      width: 100%;
      height: 100%;
    }
  }
}

@mixin list-style-reset() {
  margin: 0;
  padding: 0;

  li {
    list-style: none;
  }
}

//
// Text placeholder styling for <input> fields
//
@mixin placeholder-style() {
  @include multiple-selectors(
    "&::-webkit-input-placeholder",
    "&:-moz-placeholder",
    "&::-moz-placeholder",
    "&:-ms-input-placeholder"
  ) {
    @content;
  }
}

//
// Allows the same styles to be applied to multiple selectors without
// comma-separating them. Useful for proprietary/non-widely-supported selectors
// which can't be comma-separated.
//
@mixin multiple-selectors($selectors...) {
  @each $selector in $selectors {
    #{$selector} {
      @content;
    }
  }
}

//
// Hides browser scrollbar
//
@mixin hide-scrollbar() {
  -ms-overflow-style: none; /* IE and Edge */
  scrollbar-width: none; /* Firefox */

  &::-webkit-scrollbar {
    display: none;
  }
}

//
// Adds hover state only to devices that support it (not phones)
// Taken from: https://ferie.medium.com/detect-a-touch-device-with-only-css-9f8e30fa1134
//
@mixin hover() {
  /* one or more available input mechanism(s) can hover over elements with ease */
  @media screen and (any-hover: hover) {
    &:hover {
      @content;
    }
  }
}

//
// Button Hover Stlye
// Taken from: https://script-ip.com/
//
@mixin button-style-before() {
  @include r(desktop-wide) {
    height: 4px;
  }

  @include r(desktop) {
    height: 3px;
  }
}

@mixin button-style-after() {
  content: "";
  position: absolute;
  top: 100%;
  bottom: 0;
  left: 0;
  width: 100%;
  height: 6px;
  height: 0.375rem;
  background-color: $yellow;
  transform: translate(0, 0) rotate(0) skewX(0) skewY(0) scaleX(1) scaleY(1);
  transform-origin: left;
  transition-property: transform;
  transition-duration: 700ms;
  transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
  pointer-events: none;

  @include r(desktop-wide) {
    height: 4px;
  }

  @include r(desktop) {
    height: 3px;
  }
}

@mixin button-style-hover() {
  &::after {
    content: "";
    transform: translate(0, 0) rotate(0) skewX(0) skewY(0) scaleX(0) scaleY(1);
    transform-origin: right;
  }
}

@mixin checkbox() {
  input[type="checkbox"] {
    display: none;
    width: initial;
    height: initial;
    margin-bottom: 0;
    padding: 0;
    cursor: pointer;
  }

  label {
    position: relative;
    cursor: pointer;
  }

  label::before {
    content: "";
    position: relative;
    top: 0;
    display: inline-block;
    vertical-align: middle;
    border: 2px solid $black--design;
    border-radius: 2px;
    margin-right: 20px;
    padding: 7px;
    background-color: transparent;
    cursor: pointer;
    appearance: none;

    @include r(desktop-small) {
      margin-right: 10px;
    }

    @include r(mobile) {
      top: -1px;
    }
  }

  input[type="checkbox"]:checked + label::after {
    content: "";
    position: absolute;
    top: 0;
    bottom: 3px;
    left: 6px;
    display: block;
    width: 6px;
    height: 10px;
    border: solid $black--design;
    border-width: 0 2px 2px 0;
    margin: auto;
    transform: rotate(45deg);
  }
}
